---

- name: hosts entry generate
  blockinfile:
    path: /etc/hosts
    block: |
      {% for host in groups['k8s'] %}
      {{ hostvars[host]['ansible_facts']['enp0s3']['ipv4']['address'] }} {{ hostvars[host]['ansible_facts']['fqdn'] }} {{ hostvars[host]['ansible_facts']['hostname'] }}
      {% endfor %}

- name: pre-requisite package
  package:
    name: "{{ item }}"
    state: present
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - gpg

- name: docker gpg key 
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: 0644

- name: docker.list apt repository
  copy: 
    src: docker.list
    dest: /etc/apt/sources.list.d/docker.list
    owner: root
    group: root
    mode: 0644

#- name: kubernetes gpg key
#  get_url:
#    url: https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key
#    dest: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
#    owner: root
#    group: root
#    mode: 0644

#- name: kubernetes gpg key 
#  shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: kubernetes apt repository
  copy:
    src: kubernetes.list
    dest: /etc/apt/sources.list.d/kubernetes.list
    owner: root
    group: root
    owner: 0644

- name: apt update
  shell: apt-get update -y

- name: containerd package installation 
  package:
    name: containerd.io
    state: present

- name: config.toml copy file
  copy:
    src: config.toml
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: 0644

- name: containerd service up
  service:
    name: containerd
    state: started
    enabled: yes

- name: crictl configuration 
  copy: 
    src: crictl.yaml
    dest: /etc/crictl.yaml
    owner: root
    group: root
    mode: 0644

- name: bridge module load
  copy:
    src: module-k8s.conf
    dest: /etc/modules-load.d/k8s.conf
    owner: root
    group: root
    mode: 0644
  notify: k8s_module_load

- name: sysctl configuration 
  copy: 
    src: sysctl-k8s.conf
    dest: /etc/sysctl.d/k8s.conf
    owner: root
    group: root
    mode: 0644
  notify: reload_sysctl

- name: k8s package
  package: 
    name: "{{ item }}"
    state: present
  with_items:
    - kubelet
    - kubeadm 
    - kubectl
  register: kubernetes_installed

- name: Disable SWAP Since kubernetes can't work with swap enabled
  shell: |
    swapoff -a
  when: kubernetes_installed is changed

- name: Disable SWAP in fstab since kubernetes can't work with swap enabled
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'
  when: kubernetes_installed is changed
